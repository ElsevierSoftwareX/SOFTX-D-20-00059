[Mesh]
mesh_file = ../mesh/mesh.xdmf
# path to the .xdmf mesh file

[StateEquation]
is_linear = true
# if the state system is linear, setting this flag can speed up a few computation. is_linear = false always works, even for linear problems
picard_iteration = false
# Picard iteration determines, whether a Picard iteration is used to solve the state (and all other corresponding PDE) system(s). For a single equation this has no effect
picard_rtol = 1e-10
# Relative tolerance for the Picard iteration
picard_atol = 1e-12
# Absolute tolerance for the Picard iteration
picard_iter = 10
# Maximum number of iterations for the Picard iteration
inner_newton_atol = 1e-13
# Absolute tolerance for the Newton solver (used for nonlinear state systems)
inner_newton_rtol = 1e-11
# Relative tolerance for the Newton solver (used for nonlinear state systems)
picard_verbose = false
# If picard_verbose = true, the output / convergence of the Picard iteration is shown in the terminal (mostly for debugging)

[OptimizationRoutine]
algorithm = lbfgs
# Specifies the solution algorithm. For optimal control problems it can be one of gradient_descent (gd), conjugate_gradient (cg),
# lbfgs (bfgs), newton, semi_smooth_newton (ss_newton), primal_dual_active_set (pdas)
maximum_iterations = 250
# Maximum number of iterations to be performed by the solution algorithm
rtol = 1e-4
# Relative stopping tolerance for the solution algorithm (based on the gradient norm / stationary measure)
atol = 0.0
# Absolute stopping tolerance for the solution algorithm (based on the gradient norm / stationary measure)
step_initial = 1.0
# Initial step size for the solution algorithm
epsilon_armijo = 1e-4
# Parameter in the Armijo rule used to compute sufficient descent (defaults to 1e-4)
beta_armijo = 2
# Parameter for the Armijo rule used to decrease the stepsize via stepsize_new = stepsize_current / beta_armijo
soft_exit = true
# If true, the solution algorithm terminates (throwing an error message), but other parts of the programm will still be executed.
# If false, exists via a raise SystemExit
verbose = true
# Enables verbose output of the solution algorithm
save_results = true
# Saves the history of the solution algorithm into the file ./history.json, can be very helpful for visualization
save_pvd = true
# Saves .pvd files of the state variables over the optimization (for visualization)
### BFGS
memory_vectors = 2
# if the solution algorithm is L-BFGS, then the memory size is determined by memory_vectors
use_bfgs_scaling = true
# Scales the initial Hessian approximation for the search direction computation (this is usually very favorable to do)
### CG
cg_method = PR
# determines which nonlinear CG method is chosen if the solution algorithm is cg.
# Can be one of FR (Fletcher Reeves), PR (Polak Ribiere), HS (Hestenes Stiefel), DY (Dai Yuan), CG (conjugate descent), HZ (Hager Zhang)
cg_periodic_restart = False
# Enables periodic restarts of the NCG method
cg_periodic_its = 5
# Determines after how many iterations a restart occurrs, if cg_periodic_restart = true
cg_relative_restart = False
# Enables relative restarting of the NCG method, if subsequent gradient are not "sufficiently" orthogonal anymore
cg_restart_tol = 0.5
# Determines when the relative restart occurrs (see Nocedal and Wright, Numerical Optimization, p.125)
### Newton
inner_newton = cg
# determines the Krylov solver for the truncated Newton method. Can be one of cg (conjugate gradient), minres, cr (conjugate residual)
max_it_inner_newton = 50
# Maximum number of iterations of the Krylov solver for the truncated Newton method
inner_newton_tolerance = 1e-15
# Relative tolerance for the Krylov solver for the truncated Newton method
### Primal Dual Active Set Method
inner_pdas = newton
# Inner solver for the inner unconstrained optimization problem in the primal dual active set method
maximum_iterations_inner_pdas = 100
# Maximum number of iterations for the unconstrained optimization problem in the primal dual active set method
pdas_shift_mult = 1e-4
# shift multiplier for the primal dual active set method
pdas_inner_tolerance = 1e-2
# Relative tolerance for the solution of the unconstrained optimization problem in the primal dual active set method
